; 12 MFCCs and log frame energy

[componentInstances:cComponentManager]
instance[dataMemory].type = cDataMemory
printLevelStats=0

;
; Components
;

\{\cm[source{?}:include external source]}

[componentInstances:cComponentManager]
instance[fr].type=cFramer
instance[pe].type=cVectorPreemphasis
instance[energy].type = cEnergy
instance[win].type=cWindower
instance[fft].type=cTransformFFT
instance[fftmagphase].type=cFFTmagphase
instance[mspec].type=cMelspec
instance[mfcc].type=cMfcc

[fr:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames
frameSize = 0.025
frameStep = 0.010
frameCenterSpecial = left

[pe:cVectorPreemphasis]
reader.dmLevel=frames
writer.dmLevel=framespe
k=0.97

[energy:cEnergy]
reader.dmLevel = frames
writer.dmLevel = energy
htkcompatible = 1

[win:cWindower]
reader.dmLevel=framespe
writer.dmLevel=winframes
winFunc = Ham

[fft:cTransformFFT]
reader.dmLevel=winframes
writer.dmLevel=fftc
inverse = 0

[fftmagphase:cFFTmagphase]
reader.dmLevel=fftc
writer.dmLevel=fftmag
magnitude = 1
phase = 0

[mspec:cMelspec]
reader.dmLevel=fftmag
writer.dmLevel=mspec
htkcompatible = 1
nBands = 26
lofreq = 0
hifreq = 8000
usePower = 1

[mfcc:cMfcc]
reader.dmLevel=mspec
writer.dmLevel=mfcc
htkcompatible = 1
firstMfcc = 1
lastMfcc  = 12

;
; Output
;

[componentInstances:cComponentManager]
instance[concat].type=cVectorConcat
instance[delta].type=cDeltaRegression
instance[accel].type=cDeltaRegression

[concat:cVectorConcat]
reader.dmLevel = mfcc;energy
writer.dmLevel = lld
includeSingleElementFields = 1

[delta:cDeltaRegression]
reader.dmLevel = lld
writer.dmLevel = lld_de

[accel:cDeltaRegression]
reader.dmLevel = lld_de
writer.dmLevel = lld_de_de

\{\cm[sink{?}:include external sink]}
