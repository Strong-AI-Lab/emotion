; MFCCs - global mean across time

[componentInstances:cComponentManager]
instance[dataMemory].type = cDataMemory

;
; Components
;

\{\cm[source{?}:include external source]}

[componentInstances:cComponentManager]
instance[fr].type=cFramer
instance[pe].type=cVectorPreemphasis
instance[win].type=cWindower
instance[fft].type=cTransformFFT
instance[fftmagphase].type=cFFTmagphase
instance[mspec].type=cMelspec
instance[mfcc].type=cMfcc
instance[mean].type=cFunctionals

[fr:cFramer]
reader.dmLevel=wave
writer.dmLevel=frames
frameSize = 0.025
frameStep = 0.010
frameCenterSpecial = left

[pe:cVectorPreemphasis]
reader.dmLevel=frames
writer.dmLevel=framespe
k=0.97

[win:cWindower]
reader.dmLevel=framespe
writer.dmLevel=winframes
winFunc = Ham

[fft:cTransformFFT]
reader.dmLevel=winframes
writer.dmLevel=fftc
inverse = 0

[fftmagphase:cFFTmagphase]
reader.dmLevel=fftc
writer.dmLevel=fftmag
magnitude = 1
phase = 0

[mspec:cMelspec]
reader.dmLevel=fftmag
writer.dmLevel=mspec
nBands = 26
lofreq = 0
hifreq = 8000
usePower = 1

[mfcc:cMfcc]
reader.dmLevel=mspec
writer.dmLevel=mfcc
\{../shared/BufferMode.conf.inc}
nMfcc = \cm[nMfcc{40}:number of MFCCs to calculate]

;
; Output
;

[mean:cFunctionals]
reader.dmLevel = mfcc
writer.dmLevel = func
\{../shared/FrameModeFunctionals.conf.inc}

functionalsEnabled = Means
Means.amean = 1
Means.absmean = 0
Means.qmean = 0
Means.nzamean = 0
Means.nzabsmean = 0
Means.nzqmean = 0
Means.nzgmean = 0
Means.nnz = 0
Means.flatness = 0
Means.posamean = 0
Means.negamean = 0
Means.posqmean = 0
Means.posrqmean = 0
Means.negqmean = 0
Means.negrqmean = 0
Means.rqmean = 0
Means.nzrqmean = 0
Means.norm = frames

\{\cm[sink{?}:include external sink]}
